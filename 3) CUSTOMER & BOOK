
mysql> CREATE DATABASE customer1;

mysql> USE customer1;
Database changed

CUSTOMER TABLE-
mysql> CREATE TABLE customer (
    -> cust_id INT PRIMARY KEY,
    -> cust_name VARCHAR(50) NOT NULL,
    -> cust_city VARCHAR(50) NOT NULL,
    -> cust_contact VARCHAR(50) NOT NULL
    -> );

//Add a column CUST_CONTACT to the CUSTOMER table.
mysql> ALTER TABLE customer
    -> ADD COLUMN cust_contact VARCHAR(50);

mysql> CREATE TABLE book (
    -> order_id INT PRIMARY KEY,
    -> order_date DATE,
    -> cust_id INT,
    -> order_amount INT,
    -> FOREIGN KEY (cust_id) REFERENCES customer(cust_id)
    -> );

//Add Foreign Key constraints: Declare CUST_ID as foreign key references on CUST_ID (CUSTOMER table).
mysql> ALTER TABLE book
    -> ADD CONSTRAINT fk_cust_id
    -> FOREIGN KEY(cust_id) REFERENCES customer(cust_id);

//Drop a column CUST_CONTACT from the DRIVER table.
mysql> ALTER TABLE customer
    -> DROP COLUMN cust_contact;


mysql> INSERT INTO CUSTOMER (CUST_ID, CUST_NAME, CUST_CITY)
    -> VALUES
    -> (1, 'John', 'Mumbai'),
    -> (2, 'Jane', 'Pune'),
    -> (3, 'Michael', 'Chennai');

mysql> INSERT INTO BOOK (ORDER_ID, ORDER_DATE, CUST_ID, ORDER_AMOUNT)
    -> VALUES
    -> (101, '2024-05-01', 1, 5000),
    -> (102, '2024-05-02', 2, 750),
    -> (103, '2024-05-03', 3, 1000);


//Find customer who have ordered more than Rs. 3400/- amount.

mysql> SELECT c.cust_id, c.cust_name, SUM(b.order_amount) AS total_order_amount
    -> FROM customer c
    -> JOIN book b ON c.cust_id = b.cust_id
    -> GROUP BY c.cust_id, c.cust_name
    -> HAVING SUM(b.order_amount) > 3400;
+---------+-----------+--------------------+
| cust_id | cust_name | total_order_amount |
+---------+-----------+--------------------+
|       1 | John      |               5000 |
+---------+-----------+--------------------+
1 row in set (0.02 sec)

mysql> SELECT C.CUST_ID, C.CUST_NAME
    -> FROM CUSTOMER C
    -> WHERE C.CUST_ID IN (
    ->     SELECT B.CUST_ID
    ->     FROM BOOK B
    ->     GROUP BY B.CUST_ID
    ->     HAVING SUM(B.ORDER_AMOUNT) > 3400
    -> );
+---------+-----------+
| CUST_ID | CUST_NAME |
+---------+-----------+
|       1 | John      |
+---------+-----------+
1 row in set (0.02 sec)
